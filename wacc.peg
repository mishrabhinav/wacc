package main

type WACC Peg {

}

WACC		<- BEGIN FUNC* STAT END EOT

FUNC		<- TYPE IDENT LPAR PARAMLIST? RPAR IS STAT END

PARAMLIST	<- PARAM ( COMMA PARAM )*

PARAM		<- TYPE IDENT

STATP		<- SKIP
		/ TYPE IDENT EQU ASSIGNRHS
		/ ASSIGNLHS EQU ASSIGNRHS
		/ READ ASSIGNLHS
		/ FREE EXPR
		/ RETURN EXPR
		/ EXIT EXPR
		/ PRINTLN EXPR
		/ PRINT EXPR
		/ IF EXPR THEN STAT ELSE STAT FI
		/ WHILE EXPR DO STAT DONE
		/ BEGIN STAT END

STAT		<- STATP (SEMI STAT)*


ASSIGNLHS	<- IDENT
		/ ARRAYELEM
		/ PAIRELEM

ASSIGNRHS	<- EXPR
		/ ARRAYLITER
		/ NEWPAIR LPAR EXPR COMMA EXPR RPAR
		/ PAIRELEM
		/ CALL IDENT LPAR ARGLIST? RPAR

ARGLIST		<- EXPR (COMMA EXPR)*

PAIRELEM	<- FST EXPR
		/ SND EXPR

TYPE		<- (BASETYPE / PAIRTYPE) ARRAYTYPE*

BASETYPE	<- INT
		/ BOOL
		/ CHAR
		/ STRING

ARRAYTYPE	<- LBRK RBRK

PAIRTYPE	<- PAIR LPAR PAIRELEMTYPE COMMA PAIRELEMTYPE RPAR

PAIRELEMTYPE	<- BASETYPE ARRAYTYPE*
		/ PAIR

EXPRP		<- INTLITER
		/ BOOLLITER
		/ CHARLITER
		/ STRLITER
		/ PAIRLITER
		/ IDENT
		/ ARRAYELEM
		/ UNARYOPER EXPR
		/ LPAR EXPR RPAR

EXPR		<- EXPRP (BINARYOPER EXPR)*

UNARYOPER	<- BANG
		/ MINUS
		/ LEN
		/ ORD
		/ CHR

BINARYOPER	<- STAR
		/ DIV
		/ MOD
		/ PLUS
		/ MINUS
		/ GT
		/ GE
		/ LT
		/ LE
		/ EQUEQU
		/ BANGEQU
		/ ANDAND
		/ OROR

IDENT		<- ([_] / [a-z] / [A-Z])([_] / [a-z] / [A-Z] / [0-9])* SPACE*

ARRAYELEM	<- IDENT (LBRK EXPR RBRK)+

INTLITER	<- INTSIGN? DIGIT+ SPACE*

DIGIT		<- [0-9]

INTSIGN		<- PLUS
		/ MINUS

BOOLLITER	<- TRUE
		/ FALSE

CHARLITER	<- SINQUO CHARACTER SINQUO

STRLITER	<- DOUQUO CHARACTER* DOUQUO

CHARACTER	<- [^\'"]
		/ (BACKSL ESCAPEDCHAR)

ESCAPEDCHAR	<- NULLCHR
		/ BACKSP
		/ TAB
		/ NEWLN
		/ FRMFD
		/ CRRET
		/ DOUQUO
		/ SINQUO
		/ BACKSL

ARRAYLITER	<- LBRK ( EXPR (COMMA EXPR)* )? RBRK

PAIRLITER	<- NULL

#-------------------------------------------------------------------------------
# Spacing Characters
#-------------------------------------------------------------------------------

SPACE		<- ( [ \t\r\n]+
      		/ '/*' (!'*/' .)* '*/'
      		/ '//' (![\r\n] .)* [\r\n]
      		)

#-------------------------------------------------------------------------------
# Keywords
#-------------------------------------------------------------------------------

BEGIN		<- 'begin'      SPACE+
BOOL		<- 'bool'       SPACE+
CALL		<- 'call'       SPACE+
CHAR		<- 'char'       SPACE+
CHR		<- 'chr'        SPACE+
DO		<- 'do'         SPACE+
DONE		<- 'done'       SPACE+
ELSE		<- 'else'       SPACE+
END		<- 'end'        SPACE*
EXIT		<- 'exit'       SPACE+
FALSE		<- 'false'      SPACE+
FI		<- 'fi'         SPACE+
FREE		<- 'free'       SPACE+
FST		<- 'fst'        SPACE+
IF		<- 'if'         SPACE+
IS		<- 'is'         SPACE+
INT		<- 'int'        SPACE+
LEN		<- 'len'        SPACE+
NEWPAIR		<- 'newpair'    SPACE+
NULL		<- 'null'       SPACE+
ORD		<- 'ord'        SPACE+
PAIR		<- 'pair'       SPACE+
PRINT		<- 'print'      SPACE+
PRINTLN 	<- 'println'    SPACE+  
READ		<- 'read'       SPACE+
RETURN		<- 'return'     SPACE+
SKIP		<- 'skip'       SPACE+
SND		<- 'snd'        SPACE+
STRING		<- 'string'     SPACE+
THEN		<- 'then'       SPACE+
TRUE		<- 'true'       SPACE+
WHILE		<- 'while'      SPACE+

#-------------------------------------------------------------------------------
# Punctuators
#-------------------------------------------------------------------------------

LBRK      	<-  '['          SPACE*
RBRK      	<-  ']'          SPACE*
LPAR      	<-  '('          SPACE*
RPAR      	<-  ')'          SPACE*
STAR      	<-  '*'  ![=]    SPACE*
PLUS      	<-  '+'  ![+=]   SPACE*
MINUS     	<-  '-'  ![\-=>] SPACE*
BANG      	<-  '!'  ![=]    SPACE*
DIV       	<-  '/'  ![=]    SPACE*
MOD       	<-  '%'  ![=>]   SPACE*
LT        	<-  '<'  ![=]    SPACE*
GT        	<-  '>'  ![=]    SPACE*
LE        	<-  '<='         SPACE*
GE        	<-  '>='         SPACE*
EQUEQU    	<-  '=='         SPACE*
BANGEQU   	<-  '!='         SPACE*
ANDAND    	<-  '&&'         SPACE*
OROR      	<-  '||'         SPACE*
SEMI      	<-  ';'          SPACE*
EQU       	<-  '='  !"="    SPACE*
COMMA     	<-  ','          SPACE*
SINQUO		<-  '\''         SPACE*
DOUQUO		<-  '\"'         SPACE*

#-------------------------------------------------------------------------------
# Escape Characters
#-------------------------------------------------------------------------------

BACKSP		<-  'b'
BACKSL		<-  '\\'
TAB		<-  't'
NEWLN		<-  'n'
CRRET		<-  'r'
FRMFD		<-  'f'
NULLCHR		<-  '0'

EOT <- !.
