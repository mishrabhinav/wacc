package main

type WACC Peg {

}

WACC		<- BEGIN FUNC* STAT END EOT

FUNC		<- TYPE IDENT LPAR PARAMLIST? RPAR IS STAT END

PARAMLIST	<- PARAM ( COMMA PARAM )*

PARAM		<- TYPE IDENT

STATP		<- SKIP
		/ TYPE IDENT EQU ASSIGNRHS
		/ ASSIGNLHS EQU ASSIGNRHS
		/ READ ASSIGNLHS
		/ FREE EXPR
		/ RETURN EXPR
		/ EXIT EXPR
		/ PRINTLN EXPR
		/ PRINT EXPR
		/ IF EXPR THEN STAT ELSE STAT FI
		/ WHILE EXPR DO STAT DONE
		/ BEGIN STAT END

STAT		<- STATP (SEMI STAT)*


ASSIGNLHS	<- IDENT
		/ ARRAYELEM
		/ PAIRELEM

ASSIGNRHS	<- EXPR
		/ ARRAYLITER
		/ NEWPAIR LPAR EXPR COMMA EXPR RPAR
		/ PAIRELEM
		/ CALL IDENT LPAR ARGLIST? RPAR

ARGLIST		<- EXPR (COMMA EXPR )*

PAIRELEM	<- FST EXPR
		/ SND EXPR

TYPE		<- (BASETYPE / PAIRTYPE) ARRAYTYPE*

BASETYPE	<- INT
		/ BOOL
		/ CHAR
		/ STRING

ARRAYTYPE	<- LBRK RBRK

PAIRTYPE	<- PAIR LPAR PAIRELEMTYPE COMMA PAIRELEMTYPE RPAR

PAIRELEMTYPE	<- BASETYPE ARRAYTYPE*
		/ PAIR

EXPRP		<- INTLITER
		/ BOOLLITER
		/ CHARLITER
		/ STRLITER
		/ PAIRLITER
		/ IDENT
		/ ARRAYELEM
		/ UNARYOPER EXPR
		/ LPAR EXPR RPAR

EXPR		<- EXPRP (BINARYOPER EXPR)*

UNARYOPER	<- BANG
		/ MINUS
		/ LEN
		/ ORD
		/ CHR

BINARYOPER	<- STAR
		/ DIV
		/ MOD
		/ PLUS
		/ MINUS
		/ GT
		/ GE
		/ LT
		/ LE
		/ EQUEQU
		/ BANGEQU
		/ ANDAND
		/ OROR

IDENT		<- ('_' / [a-z] / [A_Z])('_' / [a-z] / [A_Z] / [0-9])* SPACE

ARRAYELEM	<- IDENT (LBRK EXPR RBRK)+

INTLITER	<- INTSIGN? DIGIT+

DIGIT		<- [0-9]

INTSIGN		<- PLUS
		/ MINUS

BOOLLITER	<- TRUE
		/ FALSE

CHARLITER	<- SINQUO CHARACTER SINQUO

STRLITER	<- DOUQUO CHARACTER* DOUQUO

CHARACTER	<- ([a-z] / [A-Z] / [0-9] / '!' / ' ')
		/ (BACKSL ESCAPEDCHAR)

ESCAPEDCHAR	<- NULLCHR
		/ BACKSP
		/ TAB
		/ NEWLN
		/ FRMFD
		/ CRRET
		/ DOUQUO
		/ SINQUO
		/ BACKSL

ARRAYLITER	<- LBRK ( EXPR (COMMA EXPR)* )? RBRK

PAIRLITER	<- NULL

#-------------------------------------------------------------------------------
# Spacing Characters
#-------------------------------------------------------------------------------

SPDEF		<- ( WHITESPACE
		/ LONGCOMMENT
		/ LINECOMMENT
		/ PRAGMA
		)

SPACE		<- SPDEF*
CSPACE		<- SPDEF+

WHITESPACE	<- [ \n\r\t]

LONGCOMMENT	<- '/*' (!'*/'.)* '*/'

LINECOMMENT	<- '//' (!'\n' .)*

PRAGMA		<- '#'  (!'\n' .)*

#-------------------------------------------------------------------------------
# Keywords
#-------------------------------------------------------------------------------

BEGIN		<- 'begin'      CSPACE
BOOL		<- 'bool'       CSPACE
CALL		<- 'call'       CSPACE
CHAR		<- 'char'       CSPACE
CHR		<- 'chr'        CSPACE
DO		<- 'do'         CSPACE
DONE		<- 'done'       CSPACE
ELSE		<- 'else'       CSPACE
END		<- 'end'        SPACE
EXIT		<- 'exit'       CSPACE
FALSE		<- 'false'      CSPACE
FI		<- 'fi'         CSPACE
FREE		<- 'free'       CSPACE
FST		<- 'fst'        CSPACE
IF		<- 'if'         CSPACE
IS		<- 'is'         CSPACE
INT		<- 'int'        CSPACE
LEN		<- 'len'        CSPACE
NEWPAIR		<- 'newpair'    CSPACE
NULL		<- 'null'       CSPACE
ORD		<- 'ord'        CSPACE
PAIR		<- 'pair'       CSPACE
PRINT		<- 'print'      CSPACE
PRINTLN 	<- 'println'    CSPACE  
READ		<- 'read'       CSPACE
RETURN		<- 'return'     CSPACE
SKIP		<- 'skip'       CSPACE
SND		<- 'snd'        CSPACE
STRING		<- 'string'     CSPACE
THEN		<- 'then'       CSPACE
TRUE		<- 'true'       CSPACE
WHILE		<- 'while'      CSPACE

#-------------------------------------------------------------------------------
# Punctuators
#-------------------------------------------------------------------------------

LBRK      	<-  '['          SPACE
RBRK      	<-  ']'          SPACE
LPAR      	<-  '('          SPACE
RPAR      	<-  ')'          SPACE
STAR      	<-  '*'  ![=]    SPACE
PLUS      	<-  '+'  ![+=]   SPACE
MINUS     	<-  '-'  ![\-=>] SPACE
BANG      	<-  '!'  ![=]    SPACE
DIV       	<-  '/'  ![=]    SPACE
MOD       	<-  '%'  ![=>]   SPACE
LT        	<-  '<'  ![=]    SPACE
GT        	<-  '>'  ![=]    SPACE
LE        	<-  '<='         SPACE
GE        	<-  '>='         SPACE
EQUEQU    	<-  '=='         SPACE
BANGEQU   	<-  '!='         SPACE
ANDAND    	<-  '&&'         SPACE
OROR      	<-  '||'         SPACE
SEMI      	<-  ';'          SPACE
EQU       	<-  '='  !"="    SPACE
COMMA     	<-  ','          SPACE
SINQUO		<-  '\''         SPACE
DOUQUO		<-  '\"'         SPACE

#-------------------------------------------------------------------------------
# Escape Characters
#-------------------------------------------------------------------------------

BACKSP		<-  'b'
BACKSL		<-  '\\'
TAB		<-  't'
NEWLN		<-  'n'
CRRET		<-  'r'
FRMFD		<-  'f'
NULLCHR		<-  '0'

EOT <- !.
