package main

type WACC Peg {}

#-------------------------------------------------------------------------------
# WACC Language Rules
#-------------------------------------------------------------------------------

WACC		<- SPACE BEGIN INCL* FUNC* STAT END EOT

INCL		<- INCLUDE STRLITER SPACE

FUNC		<- TYPE IDENT LPAR PARAMLIST? RPAR IS STAT END

PARAMLIST	<- PARAM ( COMMA PARAM )*

PARAM		<- TYPE IDENT SPACE

STAT		<- (SKIP
		/ BEGIN STAT END
		/ TYPE IDENT SPACE EQU ASSIGNRHS
		/ ASSIGNLHS EQU ASSIGNRHS
		/ READ ASSIGNLHS
		/ FREE EXPR
		/ RETURN EXPR
		/ EXIT EXPR
		/ PRINTLN EXPR
		/ PRINT EXPR
		/ FCALL
		/ IF EXPR THEN STAT ELSE STAT FI
		/ WHILE EXPR DO STAT DONE) (SEMI STAT)*

ASSIGNLHS	<- (PAIRELEM
		/ ARRAYELEM
		/ IDENT) SPACE

ASSIGNRHS	<- NEWPAIR LPAR EXPR COMMA EXPR RPAR
		/ ARRAYLITER
		/ PAIRELEM
		/ FCALL
		/ EXPR

ARGLIST		<- EXPR (COMMA EXPR)*

PAIRELEM	<- FST EXPR
		/ SND EXPR

TYPE		<- (BASETYPE / PAIRTYPE) ARRAYTYPE*

BASETYPE	<- INT
		/ BOOL
		/ CHAR
		/ STRING

ARRAYTYPE	<- LBRK RBRK

PAIRTYPE	<- PAIR LPAR PAIRELEMTYPE COMMA PAIRELEMTYPE RPAR

PAIRELEMTYPE	<- (BASETYPE / PAIRTYPE) ARRAYTYPE*
		/ PAIR

EXPR		<- (INTLITER
		/ UNARYOPER EXPR
		/ BOOLLITER
		/ CHARLITER
		/ STRLITER
		/ PAIRLITER
		/ ARRAYELEM
		/ LPAR EXPR RPAR
		/ IDENT) SPACE (BINARYOPER EXPR)*

FCALL		<- CALL IDENT LPAR ARGLIST? RPAR SPACE

UNARYOPER	<- BANG
		/ MINUS
		/ LEN
		/ ORD
		/ CHR

BINARYOPER	<- STAR
		/ DIV
		/ MOD
		/ PLUS
		/ MINUS
		/ GT
		/ GE
		/ LT
		/ LE
		/ EQUEQU
		/ BANGEQU
		/ ANDAND
		/ OROR

IDENT		<- (!KEYWORD) ([_] / [a-z] / [A-Z])
		([_] / [a-z] / [A-Z] / [0-9])*

ARRAYELEM	<- IDENT (LBRK EXPR RBRK)+

INTLITER	<- INTSIGN? [0-9]+

INTSIGN		<- PLUS
		/ MINUS

BOOLLITER	<- TRUE
		/ FALSE

CHARLITER	<- SINQUO CH SINQUO

CH		<- ESCAPE
		/ (![\\'"] .)

STRLITER	<- DOUQUO STR DOUQUO

STR		<- (ESCAPE
		/ (![\\'"] .)
		)*

ESCAPE		<- '\\' ['\"?\\abfnrtv0]

ARRAYLITER	<- LBRK ( EXPR (COMMA EXPR)* )? RBRK

PAIRLITER	<- NULL

#-------------------------------------------------------------------------------
# Space Characters and Comments
#-------------------------------------------------------------------------------

SPACE		<- ( [ \t\r\n]
		/ '#' (![\r\n] .)* [\r\n]
		)*

#-------------------------------------------------------------------------------
# Keywords
#-------------------------------------------------------------------------------

BEGIN		<- 'begin'	!IDCHAR SPACE
BOOL		<- 'bool'	!IDCHAR SPACE
CALL		<- 'call'	!IDCHAR SPACE
CHAR		<- 'char'	!IDCHAR SPACE
CHR		<- 'chr'	!IDCHAR SPACE
DO		<- 'do'		!IDCHAR SPACE
DONE		<- 'done'	!IDCHAR SPACE
ELSE		<- 'else'	!IDCHAR SPACE
END		<- 'end'	!IDCHAR SPACE
EXIT		<- 'exit'	!IDCHAR SPACE
FALSE		<- 'false'	!IDCHAR SPACE
FI		<- 'fi'		!IDCHAR SPACE
FREE		<- 'free'	!IDCHAR SPACE
FST		<- 'fst'	!IDCHAR SPACE
IF		<- 'if'		!IDCHAR SPACE
IS		<- 'is'		!IDCHAR SPACE
INCLUDE		<- 'include'	!IDCHAR SPACE
INT		<- 'int'	!IDCHAR SPACE
LEN		<- 'len'	!IDCHAR SPACE
NEWPAIR		<- 'newpair'	!IDCHAR SPACE
NULL		<- 'null'	!IDCHAR SPACE
ORD		<- 'ord'	!IDCHAR SPACE
PAIR		<- 'pair'	!IDCHAR SPACE
PRINT		<- 'print'	!IDCHAR SPACE
PRINTLN 	<- 'println'	!IDCHAR SPACE
READ		<- 'read'	!IDCHAR SPACE
RETURN		<- 'return'	!IDCHAR SPACE
SKIP		<- 'skip'	!IDCHAR SPACE
SND		<- 'snd'	!IDCHAR SPACE
STRING		<- 'string'	!IDCHAR SPACE
THEN		<- 'then'	!IDCHAR SPACE
TRUE		<- 'true'	!IDCHAR SPACE
WHILE		<- 'while'	!IDCHAR SPACE

KEYWORD		<- ('begin'
		/ 'bool'
		/ 'call'
		/ 'char'
		/ 'chr'
		/ 'do'
		/ 'done'
		/ 'else'
		/ 'end'
		/ 'exit'
		/ 'false'
		/ 'fi'
		/ 'free'
		/ 'fst'
		/ 'if'
		/ 'is'
		/ 'include'
		/ 'int'
		/ 'len'
		/ 'newpair'
		/ 'null'
		/ 'ord'
		/ 'pair'
		/ 'print'
		/ 'println'
		/ 'read'
		/ 'return'
		/ 'skip'
		/ 'snd'
		/ 'string'
		/ 'then'
		/ 'true'
		/ 'while'
		) !IDCHAR

IDCHAR		<- [a-z] / [A-Z] / [0-9] / [_]

#-------------------------------------------------------------------------------
# Punctuators
#-------------------------------------------------------------------------------

LBRK		<- '['		SPACE
RBRK		<- ']'		SPACE
LPAR		<- '('		SPACE
RPAR		<- ')'		SPACE
STAR		<- '*'  ![=]	SPACE
PLUS		<- '+'  ![=]	SPACE
MINUS		<- '-'  ![=>]	SPACE
BANG		<- '!'  ![=]	SPACE
DIV		<- '/'  ![=]	SPACE
MOD		<- '%'  ![=>]	SPACE
LT		<- '<'  ![=]	SPACE
GT		<- '>'  ![=]	SPACE
LE		<- '<='		SPACE
GE		<- '>='		SPACE
EQUEQU		<- '=='		SPACE
BANGEQU		<- '!='		SPACE
ANDAND		<- '&&'		SPACE
OROR		<- '||'		SPACE
SEMI		<- ';'		SPACE
EQU		<- '='  !"="	SPACE
COMMA		<- ','		SPACE
SINQUO		<- '\''
DOUQUO		<- '\"'

#-------------------------------------------------------------------------------
# End of Input
#-------------------------------------------------------------------------------

EOT		<- !.
